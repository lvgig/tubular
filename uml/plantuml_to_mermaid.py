def convert_plantuml_to_mermaid(plantuml_code):
    conversion_table = {
        # taken from https://stackoverflow.com/questions/74434399/how-can-you-generate-mermaid-from-plantuml
        "@startuml": "",
        "@enduml": "",
        "->>": "->",
        "-->>": "-->",
        "-->>*": "-->*",
        "alt": "alt",
        "else": "else",
        "end": "end",
        "participant": "participant",
        "activate": "activate",
        "deactivate": "deactivate",
        # removing paths to classes form descriptions
        "tubular.": "",
        "base.": "",
        "capping.": "",
        "comparison.": "",
        "dates.": "",
        "imputers.": "",
        "mapping.": "",
        "misc.": "",
        "nominal.": "",
        "numeric.": "",
        "strings.": "",
        # removing a few other plantUML bits of text
        "{static}": "",
        "footer Generated by //py2puml//": "",
        # adding something to classes without args so mermaid can parse
        # does not currently work, had to edit manually
        "{\n}": "{\nno_params : None}",
        # also have to remove the first few lines describing namespacemanually
    }

    mermaid_code = []

    for line in plantuml_code.splitlines():
        for key, value in conversion_table.items():
            updated_line = line.replace(key, value)
        mermaid_code.append(updated_line)

    return "\n".join(mermaid_code)


if __name__ == "__main__":

    with open("py2uml_output.txt") as file:
        plantuml_code = file.read()
        mermaid_code = convert_plantuml_to_mermaid(plantuml_code)

    with open("mermaid_uml.txt", "w") as file:
        n = file.write(mermaid_code)
